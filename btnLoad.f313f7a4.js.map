{"mappings":"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","sources":["src/btnLoad.js"],"sourcesContent":["import \"./css/styles.css\";\nimport { fetchImg } from \"./js/fetchImg\";\nimport Notiflix from \"notiflix\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst searchForm = document.querySelector(\"#search-form\");\nconst gallery = document.querySelector(\".gallery\");\nconst loadMoreBtn = document.querySelector(\".load-more\");\nconst endOfSearchText = document.querySelector(\".gallery__text\");\n\nlet query = \"\";\nlet page = 1;\nlet loadedHits = 0;\nconst perPage = 40;\n\nsearchForm.addEventListener(\"submit\", onSearchForm);\nloadMoreBtn.addEventListener(\"click\", onLoadMoreBtn);\n\nasync function onSearchForm(e) {\n    e.preventDefault();\n\n    page = 1;\n    query = e.currentTarget.searchQuery.value.trim();\n    gallery.innerHTML = \"\";\n\n    loadMoreBtn.classList.add(\"is-hidden\");\n    endOfSearchText.classList.add(\"is-hidden\");\n\n    if (query === \"\") {\n        alertEmptySearch();\n        return;\n    }\n\n    // fetchImg(query, page, perPage)\n    //     .then(({data}) => {\n    //         if (data.totalHits === 0) {\n    //             alertNoImagesFound();\n    //         } else {\n    //             renderGallery(data.hits);\n    //             alertImagesToFound(data);\n    //             simpleLightBox = new SimpleLightbox('.gallery a').refresh();\n    //         }\n\n    //         if (data.totalHits > perPage) {\n    //             loadMoreBtn.classList.remove('is-hidden');\n    //         }\n    //     }\n    // )\n    //     .catch(error => console.log(error));\n\n    try {\n        const object = await fetchImg(query, page, perPage);\n        const objData = object.data;\n        loadedHits = objData.hits.length;\n        // console.log('first', loadedHits)\n\n        if (objData.totalHits === 0) {\n            alertNoImagesFound();\n        } else {\n            renderGallery(objData.hits);\n            alertImagesToFound(objData);\n            const simpleLightBox = new SimpleLightbox(\".gallery a\").refresh();\n        }\n\n        if (objData.totalHits > perPage) {\n            loadMoreBtn.classList.remove(\"is-hidden\");\n        }\n\n        onScroll();\n    } catch (error) {\n        Notiflix.Notify.failure(\"Ooops...Something goes wrong\");\n    }\n}\n\nasync function onLoadMoreBtn() {\n    page += 1;\n\n    // fetchImg(query, page, perPage)\n    //     .then(({ data }) => {\n    //         const totalPages = Math.ceil(data.totalHits / perPage);\n\n    //         if (page > totalPages) {\n    //             loadMoreBtn.classList.add('is-hidden');\n    //             alertEndOfSearch();\n    //         } else {\n    //             renderGallery(data.hits);\n    //             simpleLightbox = new SimpleLightbox('.gallery a').refresh();\n    //         }\n\n    //     })\n    //     .catch(error => console.log(error));\n\n    try {\n        const object = await fetchImg(query, page, perPage);\n        const objData = object.data;\n        // const totalPages = Math.ceil(objData.totalHits / perPage);\n        const totalHits = objData.totalHits;\n        loadedHits += objData.hits.length;\n        // console.log('second', loadedHits)\n\n        renderGallery(objData.hits);\n        const simpleLightbox = new SimpleLightbox(\".gallery a\").refresh();\n\n        if (loadedHits === totalHits) {\n            loadMoreBtn.classList.add(\"is-hidden\");\n            endOfSearchText.classList.remove(\"is-hidden\");\n        }\n\n        onScrollMore();\n    } catch (error) {\n        Notiflix.Notify.failure(\"Ooops...Something goes wrong\");\n    }\n}\n\nfunction renderGallery(images) {\n    const galleryMarkup = images\n        .map(\n            ({\n                id,\n                largeImageURL,\n                webformatURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads\n            }) => {\n                return `\n                <a class=\"gallery__link\" href=\"${largeImageURL}\">\n                    <div class=\"photo-card\" id=\"${id}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                    <div class=\"info\">\n                        <p class=\"info-item\">\n                            <b>Likes</b> ${likes}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Views</b> ${views}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Comments</b> ${comments}\n                        </p>\n                        <p class=\"info-item\">\n                            <b>Downloads</b> ${downloads}\n                        </p>\n                    </div>\n                </div>\n                </a>\n      `;\n            }\n        )\n        .join(\"\");\n\n    gallery.insertAdjacentHTML(\"beforeend\", galleryMarkup);\n}\n\nfunction alertImagesToFound(objData) {\n    Notiflix.Notify.success(`Hooray! We found ${objData.totalHits} images.`);\n}\n\nfunction alertEmptySearch() {\n    Notiflix.Notify.failure(\"This field cannot be empty!\");\n}\n\nfunction alertNoImagesFound() {\n    Notiflix.Notify.failure(\n        \"No images were found for this request, try something else.\"\n    );\n}\n\nfunction onScroll() {\n    window.scrollBy({\n        top: 0,\n        behavior: \"smooth\"\n    });\n}\n\nfunction onScrollMore() {\n    const { height: cardHeight } = document\n        .querySelector(\".gallery\")\n        .firstElementChild.getBoundingClientRect();\n\n    window.scrollBy({\n        top: cardHeight * 2,\n        behavior: \"smooth\"\n    });\n}\n"],"names":["$bpxeT","parcelRequire","$05713a441d120581$var$searchForm","document","querySelector","$05713a441d120581$var$gallery","$05713a441d120581$var$loadMoreBtn","$05713a441d120581$var$endOfSearchText","$05713a441d120581$var$query","$05713a441d120581$var$page","$05713a441d120581$var$loadedHits","$05713a441d120581$var$perPage","$05713a441d120581$var$_onSearchForm","$parcel$interopDefault","$2TvXO","mark","_callee","e","object","objData","preventDefault","currentTarget","searchQuery","value","trim","innerHTML","classList","add","$05713a441d120581$var$alertEmptySearch","$1DGNh","fetchImg","_ctx","sent","data","hits","length","totalHits","$05713a441d120581$var$alertNoImagesFound","$05713a441d120581$var$renderGallery","$05713a441d120581$var$alertImagesToFound","$5IjG7","refresh","remove","$05713a441d120581$var$onScroll","$6JpON","Notify","failure","apply","this","arguments","$05713a441d120581$var$_onLoadMoreBtn","$05713a441d120581$var$onScrollMore","images","galleryMarkup","map","param","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","concat","join","insertAdjacentHTML","success","window","scrollBy","top","behavior","cardHeight","firstElementChild","getBoundingClientRect","height","addEventListener"],"version":3,"file":"btnLoad.f313f7a4.js.map"}